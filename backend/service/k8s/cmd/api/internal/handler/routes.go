// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	"backend/service/k8s/cmd/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(engine *rest.Server, serverCtx *svc.ServiceContext) {
	engine.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/k8s/createDeployment",
				Handler: CreateDeploymentHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/k8s/deleteDeployment",
				Handler: DeleteDeploymentHandler(serverCtx),
			},
			{
				Method:  http.MethodPut,
				Path:    "/k8s/updateDeployment",
				Handler: UpdateDeploymentHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/k8s/getDeployment",
				Handler: GetDeploymentHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/k8s/listDeployment",
				Handler: ListDeploymentHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/k8s/createNameSpace",
				Handler: CreateNamespaceHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/k8s/deleteNameSpace",
				Handler: DeleteNamespaceHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/k8s/listNameSpace",
				Handler: ListNameSpaceHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/k8s/createService",
				Handler: CreateServiceHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/k8s/deleteService",
				Handler: DeleteServiceHandler(serverCtx),
			},
			{
				Method:  http.MethodPut,
				Path:    "/k8s/updateService",
				Handler: UpdateServiceHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/k8s/getService",
				Handler: GetServiceHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/k8s/listService",
				Handler: ListServiceHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/k8s/listIngress",
				Handler: ListIngressHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/k8s/getIngress",
				Handler: GetIngressHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/k8s/deleteIngress",
				Handler: DeleteIngressHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/k8s/createIngress",
				Handler: CreateIngressHandler(serverCtx),
			},
			{
				Method:  http.MethodPut,
				Path:    "/k8s/updateIngress",
				Handler: UpdateIngressHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/k8s/listPods",
				Handler: ListPodsHandler(serverCtx),
			},
		},
	)
}
