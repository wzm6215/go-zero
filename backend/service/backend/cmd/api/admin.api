info(
	title: "admin's api"
	desc: "管理员api"
	author: "qin"
	email: "361018729@qq.com"
)

import "systemMenu.api"
import "systemApi.api"
import "systemRole.api"
import "systemDepartment.api"
import "systemRoleMenu.api"
import "systemRoleApi.api"

type (
	AdminLoginReq {
		Username string `json:"username"`
		Password string `json:"password"`
	}
	AdminUpdatePwdReq {
		OldPassword string `json:"oldPassword"`
		Password    string `json:"password"`
	}
	AdminPostReq {
		Avatar      string `db:"avatar" json:"avatar,default="`                            // 头像地址
		CreateBy    string `db:"create_by" json:"create_by,default="`                      // 创建者
		DelFlag     int64  `db:"del_flag" json:"del_flag,default=0"`                       // 删除标志（0代表存在 2代表删除）
		DeptId      int64  `db:"dept_id" json:"dept_id,default=0"`                         // 部门ID
		Email       string `db:"email" json:"email,default="`                              // 用户邮箱
		Id          int64  `db:"id" json:"id,optional"`                                    // 用户ID
		LoginDate   string `db:"login_date" json:"login_date,default=2006-01-02 15:04:05"` // 最后登录时间
		LoginIp     string `db:"login_ip" json:"login_ip,default="`                        // 最后登录IP
		NickName    string `db:"nick_name" json:"nick_name,optional"`                      // 用户昵称
		Password    string `db:"password" json:"password,default="`                        // 密码
		Phonenumber string `db:"phonenumber" json:"phonenumber,default="`                  // 手机号码
		Remark      string `db:"remark" json:"remark,default=Empty string"`                // 备注
		RoleId      int64  `db:"role_id" json:"role_id,default=0"`                         // 角色ID
		Sex         int64  `db:"sex" json:"sex,default=0"`                                 // 用户性别（0男 1女 2未知）
		Status      int64  `db:"status" json:"status,default=0"`                           // 帐号状态（0正常 1停用）
		UpdateBy    string `db:"update_by" json:"update_by,default="`                      // 更新者
		UserName    string `db:"user_name" json:"user_name,optional"`                      // 用户账号
		UserType    int64  `db:"user_type" json:"user_type,default=0"`                     // 用户类型（0系统用户）
	}
	AdminReply {
		Id       int64  `json:"id"`
		UserName string `json:"user_name"`
	}

	AdminListReq {
		Page     int64  `json:"page,optional,default=1" form:"page,optional,default=1"`
		PageSize int64  `json:"pageSize,optional,default=10" form:"pageSize,optional,default=10"`
		Keyword  string `json:"keyword,optional" form:"pageSize,optional"`
	}
	AdminDelReq {
		Id int64 `json:"id"`
	}
	AdminDelBatchReq {
		Ids string `json:"ids"`
	}
	AdminChangeAvatarReq {
		Id int64 `json:"id,optional" form:"id,optional"`
	}
)

@server (
	group:admin
)
service admin-api {
	@handler AdminLogin
	post /admin/adminLogin (AdminLoginReq) returns (AdminReply)
	
	@handler AdminInit
	post /admin/adminInit () returns (AdminReply)
}

//不需要授权
@server(
	group:admin
	jwt: Auth
)
service admin-api {
	// 修改头像
	@handler ChangeAvatar
	post /admin/changeAvatar (AdminChangeAvatarReq) returns (AdminReply)
	
	@handler AdminLogout
	post /admin/logout() returns (AdminReply)
	
	// 修改密码
	@handler Updateadminpassword
	put /admin/updateadminpassword (AdminUpdatePwdReq) returns (AdminReply)
	
	// todo:后续取消此接口，登录直接返回信息
	@handler AdminInfo
	get /admin/info() returns (AdminReply)
	
	@handler getUserInfo
	get /admin/getUserInfo() returns (AdminReply)
	
	@handler getMenu
	get /admin/getMenu() returns (AdminReply)
}

//需要授权检查
@server(
	group:admin
	jwt: Auth
	middleware: CheckLogin // 路由中间件声明
)
service admin-api {
	
	//	列表
	@handler AdminList
	post /admin/list(AdminListReq) returns (AdminReply)
	
	//	删除
	@handler AdminDelete
	delete /admin/delete(AdminDelReq) returns (AdminReply)
	
	//	删除批量
	@handler AdminDeleteBatch
	delete /admin/deleteBatch(AdminDelBatchReq) returns (AdminReply)
	
	//	查询数据
	@handler AdminFindOne
	post /admin/find(AdminDelReq) returns (AdminReply)
	
	// 添加
	@handler AdminAdd
	post /admin/adminAdd (AdminPostReq) returns (AdminReply)
	
	// 更新
	@handler AdminUpdate
	put /admin/adminUpdate (AdminPostReq) returns (AdminReply)
}